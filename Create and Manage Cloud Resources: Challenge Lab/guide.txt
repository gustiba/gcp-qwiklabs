########## Create and Manage Cloud Resources: Challenge Lab ##########


# Link Qwikslab : https://google.qwiklabs.com/focuses/10258?parent=catalog


#Task 1: Create a project jumphost instance

  - *In GUI configuration*
  - Go to Navigation Menu on the left panel > Compute Engine > VM Instance
    - Create
      - Name : nucleus-jumphost
      - Region : us-east1 (South Carolina)
      - Zone : us-east1-b
      - Machine Condifguration :
        - Series : N1
        - Machine type : f1-micro
      - Boot disk : Debian GNU/Linux 9
      - Checklist HTTP and HTTPS
    - Create
        
  - *In Google Cloud Shell Configuration*
    -gcloud compute instances create nucleus-jumphost \
          --zone us-east1-b  \
          --machine-type f1-micro  \
          --image-family debian-9  \
          --image-project debian-cloud \


#Task 2: Create a Kubernetes service cluster

  #Set default compute zone
  - gcloud config set compute/zone us-east1-b
   
  #Create a GKE cluster
  - gcloud container clusters create gke-nucleus-backend  
  
  #Get authentication credentials for the cluster
  - gcloud container clusters get-credentials gke-nucleus-backend
  
  #Deploy an application to the cluster
  - kubectl create deployment hello-server \
          --image=gcr.io/google-samples/hello-app:2.0  
  
  #To create a Kubernetes Service, which is a Kubernetes resource that lets you expose your application to external traffic
  - kubectl expose deployment hello-server \
          --type=LoadBalancer \
          --port 8080
  
 

#Task 3: Set up an HTTP load balancer

  #Create an instance template.
    - gcloud compute instance-templates create web-server-template \
         --metadata-from-file startup-script=startup.sh \
         --region us-east1
  
  #Create a target pool.
    - gcloud compute target-pools create web-server-pool
  
  #Create a managed instance group.
    - gcloud compute instance-groups managed create web-server-group \
        --base-instance-name web-server \
        --size 2 \
        --template web-server-template \
        --target-pool web-server-pool
  
  #Create a firewall rule to allow traffic (80/tcp).
    - gcloud compute firewall-rules create web-server-firewall \
        --allow tcp:80
  
  #Create a health check.
    - gcloud compute http-health-checks create http-basic-check
  
  #Create a backend service, and attach the managed instance group.
    - gcloud compute instance-groups managed \
        set-named-ports web-server-group \
        --named-ports http:80
      
    - gcloud compute backend-services create web-server-backend \
        --protocol HTTP \
        --http-health-checks http-basic-check \
        --global
  
  #Create a URL map, and target the HTTP proxy to route requests to your URL map.
    - gcloud compute url-maps create web-map \
     --default-service web-server-backend
  
  #Create a forwarding rule.
    - gcloud compute forwarding-rules create web-server-lb \
        --region us-east1 \
        --ports=80 \
        --target-pool web-server-pool



